name: Build and Deploy to Ubuntu

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка Docker Buildx для сборки образа
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Шаг 3: Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Шаг 4: Создание .env файла для локальной сборки Docker
      - name: Create .env file for local Docker build
        run: |
          cat > .env <<EOF
          JWT_KEY=${{ secrets.JWT_KEY }}
          JWT_ISSUER=${{ secrets.JWT_ISSUER }}
          JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}
          JWT_EXPIRY_IN_MINUTES=${{ secrets.JWT_EXPIRY_IN_MINUTES }}
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          MARKDOWN_PROD_PATH=${{ secrets.MARKDOWN_PROD_PATH }}
          LOGGING__LOGLEVEL__DEFAULT=${{ secrets.LOGGING__LOGLEVEL__DEFAULT }}
          LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE=${{ secrets.LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE }}
          DEFAULT_CONNECTION=${{ secrets.DEFAULT_CONNECTION }}
          ALLOWEDHOSTS=${{ secrets.ALLOWEDHOSTS }}
          EOF

      # Шаг 5: Сборка и пуш Docker образа
      - name: Build and Push Docker image
        env:
          COMPOSE_PROJECT_NAME: inapi
        run: |
          # Сначала собираем Docker образ с флагом --no-cache
          docker compose -f docker-compose.yml -f docker-compose.prod.yml build --no-cache
          
          # Затем тегируем его для Docker Hub
          docker tag inapi-api:latest tor4narek/inapi:latest
          
          # И пушим образ в Docker Hub
          docker push tor4narek/inapi:latest

      # Шаг 6: Деплой на Ubuntu сервер
      - name: Deploy to Ubuntu Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            # Переходим в директорию проекта
            cd ~/inapi

            echo "Logging into Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "Stopping existing containers..."
            docker compose down || true

            echo "Waiting for a moment before restarting containers..."
            sleep 5  # Задержка перед перезапуском контейнеров

            echo "Updating environment variables..."
            cat > .env <<EOF
            JWT_KEY=${{ secrets.JWT_KEY }}
            JWT_ISSUER=${{ secrets.JWT_ISSUER }}
            JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}
            JWT_EXPIRY_IN_MINUTES=${{ secrets.JWT_EXPIRY_IN_MINUTES }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            MARKDOWN_PROD_PATH=${{ secrets.MARKDOWN_PROD_PATH }}
            LOGGING__LOGLEVEL__DEFAULT=${{ secrets.LOGGING__LOGLEVEL__DEFAULT }}
            LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE=${{ secrets.LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE }}
            DEFAULT_CONNECTION=${{ secrets.DEFAULT_CONNECTION }}
            ALLOWEDHOSTS=${{ secrets.ALLOWEDHOSTS }}
            EOF

            echo "Pulling latest image..."
            docker pull tor4narek/inapi:latest

            echo "Starting containers..."
            docker compose up -d

            echo "Deployment complete ✅"
