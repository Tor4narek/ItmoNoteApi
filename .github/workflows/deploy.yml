name: Build and Deploy to Ubuntu

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # --- Создание .env для сб орки образа (если нужно локально) ---
      - name: Create .env file for local Docker build
        run: |
          cat > .env <<EOF
          JWT_KEY=${{ secrets.JWT_KEY }}
          JWT_ISSUER=${{ secrets.JWT_ISSUER }}
          JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}
          JWT_EXPIRY_IN_MINUTES=${{ secrets.JWT_EXPIRY_IN_MINUTES }}
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          MARKDOWN_PROD_PATH=${{ secrets.MARKDOWN_PROD_PATH }}
          LOGGING__LOGLEVEL__DEFAULT=${{ secrets.LOGGING__LOGLEVEL__DEFAULT }}
          LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE=${{ secrets.LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE }}
          DEFAULT_CONNECTION=${{ secrets.DEFAULT_CONNECTION }}
          ALLOWEDHOSTS=${{ secrets.ALLOWEDHOSTS }}
          DB_NAME=${{secrets.DB_NAME}}
          DB_PASSWORD=${{secrets.DB_PASSWORD}}
          DB_USER=${{secrets.DB_USER}}
          EOF

      - name: Build and Push Docker image
        env:
          COMPOSE_PROJECT_NAME: inapi
        run: |
          docker compose build --no-cache
          docker tag inapi-api:latest tor4narek/inapi:latest
          docker push tor4narek/inapi:latest

      - name: Deploy to Ubuntu Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            cd ~/inapi

            echo "=== 🔐 Docker Login ==="
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "=== 🛑 Stopping existing containers ==="
            docker compose down || true

            echo "=== ⏳ Wait before restart ==="
            sleep 5

            echo "=== 📝 Writing .env file ==="
            cat > .env <<EOF
            JWT_KEY=${{ secrets.JWT_KEY }}
            JWT_ISSUER=${{ secrets.JWT_ISSUER }}
            JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}
            JWT_EXPIRY_IN_MINUTES=${{ secrets.JWT_EXPIRY_IN_MINUTES }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            MARKDOWN_PROD_PATH=${{ secrets.MARKDOWN_PROD_PATH }}
            LOGGING__LOGLEVEL__DEFAULT=${{ secrets.LOGGING__LOGLEVEL__DEFAULT }}
            LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE=${{ secrets.LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE }}
            DEFAULT_CONNECTION=${{ secrets.DEFAULT_CONNECTION }}
            ALLOWEDHOSTS=${{ secrets.ALLOWEDHOSTS }}
            DB_NAME=${{secrets.DB_NAME}}
            DB_PASSWORD=${{secrets.DB_PASSWORD}}
            DB_USER=${{secrets.DB_USER}}
            EOF

            echo "=== 📄 .env contents ==="
            cat .env

            echo "=== 🐳 Pulling latest Docker image ==="
            docker pull tor4narek/inapi:latest

            echo "=== 🔍 Docker Compose config   ==="
            docker compose config

            echo "=== 🚀 Starting containers ==="
            docker compose up -d

            echo "✅ Deployment complete"
