name: Build and Deploy to Ubuntu

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Debug directory contents
        run: |
          pwd
          ls -la
          find . -type f

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Убираем создание .env файла - файл должен быть в репозитории или на сервере
      - name: Build and push Docker image
        env:
          COMPOSE_PROJECT_NAME: inapi
        run: |
          docker compose build --no-cache
          docker images
          docker tag inapi-api:latest tor4narek/inapi:latest
          docker push tor4narek/inapi:latest

      - name: Deploy to Ubuntu Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs:
            JWT_SECRET_KEY,JWT_ISSUER,JWT_AUDIENCE,JWT_EXPIRY_IN_MINUTES,TELEGRAM_BOT_TOKEN,MARKDOWN_PROD_PATH,LOGGING__LOGLEVEL__DEFAULT,LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE,DEFAULT_CONNECTION,ALLOWEDHOSTS,DOCKER_USERNAME,DOCKER_PASSWORD
          script: |
            cd ~/inapi

            # Пересоздаём .env файл на сервере (если он не был заранее на сервере, нужно будет его создать вручную)
            cat > .env <<EOF
            JWT_SECRET_KEY=$JWT_SECRET_KEY
            JWT_ISSUER=$JWT_ISSUER
            JWT_AUDIENCE=$JWT_AUDIENCE
            JWT_EXPIRY_IN_MINUTES=$JWT_EXPIRY_IN_MINUTES
            TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
            MARKDOWN_PROD_PATH=$MARKDOWN_PROD_PATH
            LOGGING__LOGLEVEL__DEFAULT=$LOGGING__LOGLEVEL__DEFAULT
            LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE=$LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE
            DEFAULT_CONNECTION=$DEFAULT_CONNECTION
            ALLOWEDHOSTS=$ALLOWEDHOSTS
            EOF

            # Login to Docker
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

            # Остановить старые контейнеры
            docker compose down || true

            # Забрать новую версию образа
            docker pull tor4narek/inapi:latest

            # Запустить контейнеры
            docker compose up -d
